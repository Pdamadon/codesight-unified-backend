document.addEventListener("DOMContentLoaded",async()=>{const e=document.getElementById("loading"),t=document.getElementById("content"),n=document.getElementById("consentDialog"),o=document.getElementById("error"),s=document.getElementById("startBtn"),a=document.getElementById("stopBtn"),i=document.getElementById("downloadBtn"),c=document.getElementById("downloadControls"),d=document.getElementById("settingsLink"),l=document.getElementById("acceptBtn"),r=document.getElementById("declineBtn"),u=document.getElementById("trackingStatus"),y=document.getElementById("sessionId"),m=document.getElementById("eventCount"),g=document.getElementById("screenshotCount"),p=document.getElementById("duration"),w=document.getElementById("qualityScore");let h=null,k=null;async function E(){try{await b(),await I(),e.style.display="none",t.style.display="block",h=setInterval(b,1e3)}catch(e){v("Failed to initialize: "+e.message)}}async function b(){try{const[e]=await chrome.tabs.query({active:!0,currentWindow:!0}),t=await chrome.tabs.sendMessage(e.id,{action:"GET_STATUS"});t&&C(t)}catch(e){C({isTracking:!1,sessionId:null,eventCount:0,screenshotCount:0,duration:0,quality:0})}}function C(e){e.isTracking?(u.textContent="Active",u.className="status-value status-active",y.textContent=e.sessionId||"-",m.textContent=e.eventCount||0,g.textContent=e.screenshotCount||0,p.textContent=function(e){const t=Math.floor(e/1e3),n=Math.floor(t/60),o=Math.floor(n/60);return o>0?`${o}h ${n%60}m`:n>0?`${n}m ${t%60}s`:`${t}s`}(e.duration||0),w.textContent=(e.quality||0)+"%",s.disabled=!0,a.disabled=!1,c.style.display="block"):(u.textContent="Inactive",u.className="status-value status-inactive",y.textContent="-",m.textContent="0",g.textContent="0",p.textContent="0s",w.textContent="0%",s.disabled=!1,a.disabled=!0,c.style.display="none")}async function I(){try{const[e]=await chrome.tabs.query({active:!0,currentWindow:!0}),t=e.url;if(!t||!t.startsWith("http://")&&!t.startsWith("https://"))return void console.log("Skipping task generation for non-web URL:",t);console.log("Generating task for site:",t);const n="https://gentle-vision-production.up.railway.app",o="test-key-dev",s=await fetch(`${n}/api/tasks/generate?website=${encodeURIComponent(t)}&userLevel=beginner`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":o}});if(s.ok){const e=await s.json();e.success&&e.task?(k=e.task,console.log("Generated task:",k.title),function(){const e=document.getElementById("taskDisplay"),t=document.getElementById("taskTitle"),n=document.getElementById("taskDescription"),o=document.getElementById("regenerateBtn");k&&e&&(t.textContent=k.title,n.textContent=k.description,e.style.display="block",o&&(o.onclick=async()=>{o.textContent="Generating...",o.disabled=!0,await I(),o.textContent="Generate New Task",o.disabled=!1}))}()):(console.error("Task generation failed:",e.error||"Unknown error"),console.log("Task generation response:",e))}else{const e=await s.text().catch(()=>"Could not read error response");console.error("Failed to call task generation API:",s.status,s.statusText),console.error("Error response:",e)}}catch(e){console.error("Error generating task:",e)}}function v(n){o.textContent=n,o.style.display="block",e.style.display="none",t.style.display="block"}chrome.storage.local.get(["userConsent"],async t=>{!0===t.userConsent?await E():(e.style.display="none",n.style.display="block")}),l.addEventListener("click",async()=>{chrome.storage.local.set({userConsent:!0},async()=>{n.style.display="none",await E()})}),r.addEventListener("click",()=>{chrome.storage.local.set({userConsent:!1},()=>{n.style.display="none",v("Data collection consent is required to use this shopping assistant.")})}),s.addEventListener("click",async()=>{try{o.style.display="none",s.disabled=!0;const[e]=await chrome.tabs.query({active:!0,currentWindow:!0}),t="session_"+Date.now()+"_"+Math.random().toString(36).substr(2,9),n=await chrome.tabs.sendMessage(e.id,{action:"START_TRACKING",sessionId:t,generatedTask:k,config:{screenshotEnabled:!0,compressionEnabled:!0,privacyMode:!0}});if(!n||!n.success)throw new Error("Failed to start tracking");await b()}catch(e){v("Failed to start tracking: "+e.message),s.disabled=!1}}),a.addEventListener("click",async()=>{try{o.style.display="none",a.disabled=!0;const[t]=await chrome.tabs.query({active:!0,currentWindow:!0}),n=await chrome.tabs.sendMessage(t.id,{action:"STOP_TRACKING"});if(!n||!n.success)throw new Error("Failed to stop tracking");await b(),n.data&&(e=n.data,console.log("Session completed:",e))}catch(e){v("Failed to stop tracking: "+e.message),a.disabled=!1}var e}),i.addEventListener("click",async()=>{try{o.style.display="none",i.disabled=!0,i.textContent="Downloading...";const[e]=await chrome.tabs.query({active:!0,currentWindow:!0}),t=await chrome.tabs.sendMessage(e.id,{action:"GET_SESSION_DATA"});if(!(t&&t.success&&t.data))throw new Error("No session data available");!function(e){const t=(new Date).toISOString().replace(/[:.]/g,"-"),n=`codesight-session-${e.sessionId||"unknown"}-${t}.json`,o=JSON.stringify(e,null,2),s=new Blob([o],{type:"application/json"}),a=URL.createObjectURL(s),i=document.createElement("a");i.href=a,i.download=n,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(a),console.log("Session data downloaded:",n)}(t.data),i.textContent="Downloaded!",setTimeout(()=>{i.textContent="Download Session Data"},2e3)}catch(e){v("Failed to download session data: "+e.message)}finally{i.disabled=!1}}),d.addEventListener("click",e=>{e.preventDefault(),chrome.runtime.openOptionsPage()}),window.addEventListener("unload",()=>{h&&clearInterval(h)})});
//# sourceMappingURL=popup.js.map