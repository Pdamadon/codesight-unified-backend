(()=>{const e={backendUrl:"wss://gentle-vision-production.up.railway.app/ws",autoStart:!1,sessionTimeout:30,privacyMode:!0,allowedDomains:[],screenshotEnabled:!0,screenshotQuality:.8,burstMode:!0,maxEvents:1e3,compressionQuality:.8,maxScreenshotSize:2,burstModeDelay:300,maxQueueSize:100};async function t(){try{const t=await chrome.storage.sync.get(e);document.getElementById("backendUrl").value=t.backendUrl,document.getElementById("autoStart").checked=t.autoStart,document.getElementById("sessionTimeout").value=t.sessionTimeout,document.getElementById("privacyMode").checked=t.privacyMode,document.getElementById("allowedDomains").value=t.allowedDomains.join("\n"),document.getElementById("screenshotEnabled").checked=t.screenshotEnabled,document.getElementById("screenshotQuality").value=t.screenshotQuality,document.getElementById("burstMode").checked=t.burstMode,document.getElementById("maxEvents").value=t.maxEvents,document.getElementById("compressionQuality").value=t.compressionQuality,document.getElementById("maxScreenshotSize").value=t.maxScreenshotSize,document.getElementById("burstModeDelay").value=t.burstModeDelay,document.getElementById("maxQueueSize").value=t.maxQueueSize}catch(e){s("Failed to load settings: "+e.message,"error")}}function s(e,t){const s=document.getElementById("status");s.textContent=e,s.className="status "+t,s.style.display="block",setTimeout(()=>{s.style.display="none"},5e3)}document.addEventListener("DOMContentLoaded",t),document.getElementById("saveBtn").addEventListener("click",async function(){try{const e={backendUrl:document.getElementById("backendUrl").value.trim(),autoStart:document.getElementById("autoStart").checked,sessionTimeout:parseInt(document.getElementById("sessionTimeout").value),privacyMode:document.getElementById("privacyMode").checked,allowedDomains:document.getElementById("allowedDomains").value.split("\n").map(e=>e.trim()).filter(e=>e.length>0),screenshotEnabled:document.getElementById("screenshotEnabled").checked,screenshotQuality:parseFloat(document.getElementById("screenshotQuality").value),burstMode:document.getElementById("burstMode").checked,maxEvents:parseInt(document.getElementById("maxEvents").value),compressionQuality:parseFloat(document.getElementById("compressionQuality").value),maxScreenshotSize:parseFloat(document.getElementById("maxScreenshotSize").value),burstModeDelay:parseInt(document.getElementById("burstModeDelay").value),maxQueueSize:parseInt(document.getElementById("maxQueueSize").value)};if(!e.backendUrl)throw new Error("Backend URL is required");if(!e.backendUrl.startsWith("ws://")&&!e.backendUrl.startsWith("wss://"))throw new Error("Backend URL must start with ws:// or wss://");await chrome.storage.sync.set(e),chrome.runtime.sendMessage({action:"SETTINGS_UPDATED",settings:e}),s("Settings saved successfully!","success")}catch(e){s("Failed to save settings: "+e.message,"error")}}),document.getElementById("resetBtn").addEventListener("click",async function(){if(confirm("Are you sure you want to reset all settings to defaults?"))try{await chrome.storage.sync.set(e),await t(),s("Settings reset to defaults","success")}catch(e){s("Failed to reset settings: "+e.message,"error")}}),document.getElementById("exportBtn").addEventListener("click",async function(){try{const e=await chrome.storage.local.get(),t=[],n=[];for(const[s,a]of Object.entries(e))s.startsWith("session_")?t.push(a):s.startsWith("screenshot_")&&n.push(a);const a={exportDate:(new Date).toISOString(),extensionVersion:chrome.runtime.getManifest().version,sessions:t.length,screenshots:n.length,data:{sessions:t,screenshots:n}},o=new Blob([JSON.stringify(a,null,2)],{type:"application/json"}),r=URL.createObjectURL(o),c=document.createElement("a");c.href=r,c.download=`codesight-export-${Date.now()}.json`,c.click(),URL.revokeObjectURL(r),s(`Exported ${t.length} sessions and ${n.length} screenshots`,"success")}catch(e){s("Failed to export data: "+e.message,"error")}}),document.getElementById("backendUrl").addEventListener("input",e=>{const t=e.target.value.trim();!t||t.startsWith("ws://")||t.startsWith("wss://")?e.target.setCustomValidity(""):e.target.setCustomValidity("URL must start with ws:// or wss://")}),document.querySelectorAll('input[type="number"]').forEach(e=>{e.addEventListener("input",e=>{const t=parseFloat(e.target.min),s=parseFloat(e.target.max),n=parseFloat(e.target.value);n<t||n>s?e.target.setCustomValidity(`Value must be between ${t} and ${s}`):e.target.setCustomValidity("")})})})();